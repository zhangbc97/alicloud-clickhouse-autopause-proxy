// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: clickhouse/clickhouse.proto

package clickhouse

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AliYunClickhouseClient is the client API for AliYunClickhouse service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AliYunClickhouseClient interface {
	KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
}

type aliYunClickhouseClient struct {
	cc grpc.ClientConnInterface
}

func NewAliYunClickhouseClient(cc grpc.ClientConnInterface) AliYunClickhouseClient {
	return &aliYunClickhouseClient{cc}
}

func (c *aliYunClickhouseClient) KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := c.cc.Invoke(ctx, "/AliYunClickhouse/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AliYunClickhouseServer is the server API for AliYunClickhouse service.
// All implementations must embed UnimplementedAliYunClickhouseServer
// for forward compatibility
type AliYunClickhouseServer interface {
	KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error)
	mustEmbedUnimplementedAliYunClickhouseServer()
}

// UnimplementedAliYunClickhouseServer must be embedded to have forward compatible implementations.
type UnimplementedAliYunClickhouseServer struct {
}

func (UnimplementedAliYunClickhouseServer) KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (UnimplementedAliYunClickhouseServer) mustEmbedUnimplementedAliYunClickhouseServer() {}

// UnsafeAliYunClickhouseServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AliYunClickhouseServer will
// result in compilation errors.
type UnsafeAliYunClickhouseServer interface {
	mustEmbedUnimplementedAliYunClickhouseServer()
}

func RegisterAliYunClickhouseServer(s grpc.ServiceRegistrar, srv AliYunClickhouseServer) {
	s.RegisterService(&AliYunClickhouse_ServiceDesc, srv)
}

func _AliYunClickhouse_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliYunClickhouseServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AliYunClickhouse/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliYunClickhouseServer).KeepAlive(ctx, req.(*KeepAliveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AliYunClickhouse_ServiceDesc is the grpc.ServiceDesc for AliYunClickhouse service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AliYunClickhouse_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "AliYunClickhouse",
	HandlerType: (*AliYunClickhouseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KeepAlive",
			Handler:    _AliYunClickhouse_KeepAlive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clickhouse/clickhouse.proto",
}
